#!/bin/sh
set -e
set -x


. /usr/share/debconf/confmodule

db_version 2.0





pathfind() {
    OLDIFS="$IFS"
    IFS=:
    for p in $PATH; do
        if [ -x "$p/$*" ]; then
            IFS="$OLDIFS"
            return 0
        fi
    done
    IFS="$OLDIFS"
    return 1
}

lighttpd_install() {
    if [ -d /etc/lighttpd/conf-available ] && [ ! -f /etc/lighttpd/conf-available/50-cnb-cache.conf ]; then
        if pathfind lighty-enable-mod; then
            ln -s /etc/cnb-cache/lighttpd.conf /etc/lighttpd/conf-available/50-cnb-cache.conf
            if ! { lighty-enable-mod cnb-cache fastcgi fastcgi-php || [ $? -eq 2 ]; }; then
                return 1
            fi
        fi
    fi
}

[ ! -e /usr/share/apache2/apache2-maintscript-helper ] || . /usr/share/apache2/apache2-maintscript-helper

apache_install() {
    if [ -e /usr/share/apache2/apache2-maintscript-helper ]; then
        if [ -d /etc/apache2/conf-available ] && [ ! -e /etc/apache2/conf-available/cnb-cache.conf ]; then
            ln -s /etc/cnb-cache/apache.conf /etc/apache2/conf-available/cnb-cache.conf
        fi
        # Remove old symlink if present
        if [ -d /etc/apache2/conf.d ] && [ -h /etc/apache2/conf.d/cnb-cache ]; then
            rm /etc/apache2/conf.d/cnb-cache
        fi
        # Enable the configuration
        apache2_invoke enconf cnb-cache.conf
    fi
}



case "$1" in
    configure)


    # If the package has default file it could be sourced, so that
    # the local admin can overwrite the defaults

    # shellcheck disable=SC1091
    [ -f "/etc/default/cnb-cache" ] && . /etc/default/cnb-cache

    # Sane defaults:

    [ -z "$SERVER_HOME" ] && SERVER_HOME=/var/lib/cnb-cache
    [ -z "$SERVER_USER" ] && SERVER_USER=cnb-cache
    [ -z "$SERVER_NAME" ] && SERVER_NAME="cnb-cache"
    [ -z "$SERVER_GROUP" ] && SERVER_GROUP=cnb-cache

    # Groups that the user will be added to, if undefined, then none.
    ADDGROUP="cnb-cache"

    # create user to avoid running server as root
    # 1. create group if not existing
    if ! getent group | grep -q "^$SERVER_GROUP:"; then
        echo -n "Adding group $SERVER_GROUP.."
        addgroup --quiet --system "$SERVER_GROUP" 2>/dev/null || true
        echo "..done"
    fi
    # 2. create homedir if not existing
    test -d "$SERVER_HOME" || mkdir "$SERVER_HOME"
    # 3. create user if not existing
    if ! getent passwd | grep -q "^$SERVER_USER:"; then
        echo -n "Adding system user $SERVER_USER.."
        adduser --quiet \
            --system \
            --ingroup "$SERVER_GROUP" \
            --home /var/lib/cnb-cache \
            --disabled-password \
            "$SERVER_USER" 2>/dev/null || true
        echo "..done"
    fi
    # 4. adjust passwd entry
    usermod -c "$SERVER_NAME" \
        -d "$SERVER_HOME" \
        -g "$SERVER_GROUP" \
        "$SERVER_USER"
    # 5. adjust file and directory permissions
    if ! dpkg-statoverride --list "$SERVER_HOME" >/dev/null; then
        chown -R "$SERVER_USER":adm "$SERVER_HOME"
        chmod u=rwx,g=rxs,o= "$SERVER_HOME"
    fi
    # 6. Add the user to the ADDGROUP group
    if test -n $ADDGROUP; then
        if ! groups "$SERVER_USER" | cut -d: -f2 |
            grep -qw $ADDGROUP; then
            adduser "$SERVER_USER" $ADDGROUP
        fi
    fi

    db_title "Reconfigure web server"
    db_get cnb-cache/reconfigure-webserver || true
    webservers="$RET"
    restart=""

    for webserver in $webservers; do
        webserver=${webserver%,}
        case "$webserver" in
        lighttpd)
            lighttpd_install
            ;;
        apache2)
            apache_install
            ;;
        esac
        pathfind "$webserver" || continue
        restart="$restart $webserver"
    done

    db_title "Restarting web server"
    db_get cnb-cache/restart-webserver || true
    res="$RET"
    db_stop || true
    if [ "$res" = "true" ]; then
        for webserver in $restart; do
            webserver=${webserver%,}
            # Redirection of 3 is needed because Debconf uses it and it might
            # be inherited by webserver. See bug #446324.
            if pathfind invoke-rc.d; then
                invoke-rc.d "$webserver" reload 3>/dev/null || true
            else
                /etc/init.d/"$webserver" reload 3>/dev/null || true
            fi
        done
    fi

    if [ -f /usr/share/dbconfig-common/dpkg/postinst ]; then
        . /usr/share/dbconfig-common/dpkg/postinst
        # shellcheck disable=SC2034
        dbc_generate_include_args="-U -o template_infile=/usr/lib/cnb-cache/.env.template"
        # shellcheck disable=SC2034
        dbc_generate_include=template:/etc/cnb-cache/cnb-cache.env
        # shellcheck disable=SC2034
        dbc_generate_include_owner="root:www-data"
        # shellcheck disable=SC2034
        dbc_generate_include_perms="664"
        # shellcheck disable=SC2034
        dbc_dbfile_owner="www-data:www-data"
        # shellcheck disable=SC2034
        dbc_dbfile_perms="0664"
        # shellcheck disable=SC2034
        dbc_dbuser=cnb-cache
        # shellcheck disable=SC2034
        dbc_dbname=cnb-cache

        db_set cnb-cache/database-type sqlite
        db_go || true
        
        dbc_go cnb-cache "$@"

        echo "############################"
        cat /etc/cnb-cache/cnb-cache.env
        echo "############################"

        phinx migrate -c /usr/lib/cnb-cache/phinx-adapter.php

        if [ -f /var/lib/cnb-cache/cnb-cache ]; then
            chown root:www-data /var/lib/cnb-cache
            chmod ug+rw /var/lib/cnb-cache
        fi

    fi


    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac


#DEBHELPER#

exit 0
