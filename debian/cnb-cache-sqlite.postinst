#!/bin/sh
set -e
#set -x

. /usr/share/debconf/confmodule

db_version 2.0

case "$1" in
configure)

    . /usr/share/debconf/confmodule
    . /usr/share/dbconfig-common/dpkg/postinst.sqlite3


    # Sane defaults:

    [ -z "$SERVER_HOME" ] && SERVER_HOME=/var/lib/cnb-cache
    [ -z "$SERVER_USER" ] && SERVER_USER=cnb-cache
    [ -z "$SERVER_NAME" ] && SERVER_NAME="cnb-cache"
    [ -z "$SERVER_GROUP" ] && SERVER_GROUP=cnb-cache

    # Groups that the user will be added to, if undefined, then none.
    ADDGROUP="cnb-cache"

    # create user to avoid running server as root
    # 1. create group if not existing
    if ! getent group | grep -q "^$SERVER_GROUP:"; then
        echo -n "Adding group $SERVER_GROUP.."
        addgroup --quiet --system "$SERVER_GROUP" 2>/dev/null || true
        echo "..done"
    fi
    # 2. create homedir if not existing
    test -d "$SERVER_HOME" || mkdir "$SERVER_HOME"
    # 3. create user if not existing
    if ! getent passwd | grep -q "^$SERVER_USER:"; then
        echo -n "Adding system user $SERVER_USER.."
        adduser --quiet \
            --system \
            --ingroup "$SERVER_GROUP" \
            --home /var/lib/cnb-cache \
            --disabled-password \
            "$SERVER_USER" 2>/dev/null || true
        echo "..done"
    fi
    # 4. adjust passwd entry
    usermod -c "$SERVER_NAME" \
        -d "$SERVER_HOME" \
        -g "$SERVER_GROUP" \
        "$SERVER_USER"
    # 5. adjust file and directory permissions
    if ! dpkg-statoverride --list "$SERVER_HOME" >/dev/null; then
        chown -R "$SERVER_USER":adm "$SERVER_HOME"
        chmod u=rwx,g=rxs,o= "$SERVER_HOME"
    fi
    # 6. Add the user to the ADDGROUP group
    if test -n $ADDGROUP; then
        if ! groups "$SERVER_USER" | cut -d: -f2 |
            grep -qw $ADDGROUP; then
            adduser "$SERVER_USER" $ADDGROUP
        fi
    fi


    # shellcheck disable=SC2034
    dbc_generate_include_args="-U -o template_infile=/usr/lib/cnb-cache/.env.template"
    # shellcheck disable=SC2034
    dbc_generate_include=template:/etc/cnb-cache/cnb-cache.env
    # shellcheck disable=SC2034
    dbc_generate_include_owner="root:cnb-cache"
    # shellcheck disable=SC2034
    dbc_generate_include_perms="664"
    # shellcheck disable=SC2034
    dbc_dbfile_owner="cnb-cache:cnb-cache"
    # shellcheck disable=SC2034
    dbc_dbfile_perms="0664"
    # shellcheck disable=SC2034
    dbc_dbuser=cnb-cache
    # shellcheck disable=SC2034
    dbc_dbname=cnb-cache

    dbc_go cnb-cache-sqlite "$@" || true

    echo "############################"
    cat /etc/cnb-cache/cnb-cache.env
    echo "############################"

    if [ ! -d /var/lib/dbconfig-common/sqlite3/cnb-cache ]; then
        mkdir -p /var/lib/dbconfig-common/sqlite3/cnb-cache
        chown cnb-cache:cnb-cache /var/lib/dbconfig-common/sqlite3/cnb-cache
    fi

    if [ ! -f /var/lib/dbconfig-common/sqlite3/cnb-cache/cnb-cache ]; then
        install -o cnb-cache -g cnb-cache -m 0644 /dev/null /var/lib/dbconfig-common/sqlite3/cnb-cache/cnb-cache
    fi


    if [ -f /var/lib/cnb-cache/cnb-cache ]; then
        chown root:cnb-cache /var/lib/cnb-cache
        chmod ug+rw /var/lib/cnb-cache
    fi

    ;;

abort-upgrade | abort-remove | abort-deconfigure) ;;

*)
    echo "postinst called with unknown argument \`$1'" >&2
    exit 1
    ;;
esac

#DEBHELPER#

exit 0
